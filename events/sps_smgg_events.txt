namespace = sps_smgg

# 1 - 
# 2 - Homewolrd planet class changing
# 3 - 2nd race fixes - To do but dn't know how actually
# 4 - Maruders Fix
# 5 - Guaranteed Worlds fix - There are needed some improvements
# 6 - Central Black Holes
# 
# 10 - Vanilla events for empires (Pops, buildings, deposits e.t.c)
# 11 - Fix for nebulas - Not working currently/ Added for a future
# 
# 
# 
# 
# 
# 
# 
# 
# 
# 
# 
# 
# 
# 
# 
# 


event = {
    id = sps_smgg.2
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		every_country = {
			limit = { is_country_type = default }
			if = {
				limit = { capital_scope = { is_ideal_planet_class = { who = PREV status = no } } }
				switch = {
					trigger = ideal_planet_class
					pc_continental = { capital_scope = { change_pc = pc_continental } }
					pc_ocean = { capital_scope = { change_pc = pc_ocean } }
					pc_tropical = { capital_scope = { change_pc = pc_tropical } }
					pc_desert = { capital_scope = { change_pc = pc_desert } }
					pc_arid = { capital_scope = { change_pc = pc_arid } }
					pc_savannah = { capital_scope = { change_pc = pc_savannah } }
					pc_arctic = { capital_scope = { change_pc = pc_arctic } }
					pc_alpine = { capital_scope = { change_pc = pc_alpine } }
					pc_tundra = { capital_scope = { change_pc = pc_tundra } }
					pc_hive = { capital_scope = { change_pc = pc_hive } }
					pc_machine = { capital_scope = { change_pc = pc_machine } }
				}
			}
			if = {
				limit = { is_machine_empire = yes }
				capital_scope = {
					change_pc = rl_habitable_normal
				}
			}
			if = {
				limit = { has_origin = origin_remnants }
				capital_scope = {
					change_pc = pc_relic
				}
			}
			switch = {
				trigger = has_origin
				origin_life_seeded = {
					capital_scope = {
						change_pc = pc_gaia
					}
					modify_species = {
						species = owner_main_species
						ideal_planet_class = pc_gaia
					}
				}
				origin_post_apocalyptic = {
					capital_scope = {
						change_pc = pc_nuked
						modify_species = {
							species = this
							ideal_planet_class = pc_nuked
						}
					}
				}
				origin_tree_of_life = {
					capital_scope = {
						remove_modifier = no_lifetree
					}
				}
				origin_origin_ocean_paradise = {
					capital_scope = {
						change_pc = pc_ocean
					}
				}
				origin_machine = {
					capital_scope = {
						change_pc = pc_machine
					}
				}
			}
		}
	}
}
# Empire default fix

event = {
	id = sps_smgg.3
	is_triggered_only = yes
	hide_window = yes

	immediate = {

	}
}

event = {
	id = sps_smgg.4
	is_triggered_only = yes
	hide_window = yes
	immediate = {
		random_system = {
			limit = {
				owner = {
					is_same_value = event_target:marauder_country_1
				}
			}
			closest_system = {
				limit = {
					NOT = {
						exists = starbase
					}
				}
				star = {
					create_fleet = {
						effect = {
							set_owner = event_target:marauder_country_1
							create_ship = {
								name = random
								design = "NAME_Void_Dwelling"
								graphical_culture = "pirate_01"
							}
							set_location = {
								target = prev
								distance = 65
								angle = 0
							}
						}
					}
					create_fleet = {
						effect = {
							set_owner = event_target:marauder_country_1
							create_ship = {
								name = random
								design = "NAME_Void_Dwelling"
								graphical_culture = "pirate_01"
							}
							set_location = {
								target = prev
								distance = 115
								angle = 145
							}
						}
					}
					create_fleet = {
						effect = {
							set_owner = event_target:marauder_country_1
							create_ship = {
								name = random
								design = "NAME_Ancestral_Glory"
								graphical_culture = "pirate_01"
							}
							set_formation_scale = 2
							set_fleet_stance = aggressive
							set_aggro_range_measure_from = self
							set_aggro_range = 250
							set_location = {
								target = prev
								distance = 90
								angle = 220
							}
						}
						settings = {
							garrison = yes
						}
					}
					create_fleet = {
						effect = {
							set_owner = event_target:marauder_country_1
							while = {
								count = 22
								create_ship = {
									name = random
									design = "NAME_Outrider"
									graphical_culture = "pirate_01"
								}
							}
							while = {
								count = 14
								create_ship = {
									name = random
									design = "NAME_Lancer"
									graphical_culture = "pirate_01"
								}
							}
							while = {
								count = 8
								create_ship = {
									name = random
									design = "NAME_Void_Champion"
									graphical_culture = "pirate_01"
								}
							}
							set_formation_scale = 2
							set_fleet_stance = aggressive
							set_aggro_range_measure_from = self
							set_aggro_range = 250
							set_location = {
								target = prev
								distance = 100
								angle = 310
							}
						}
						settings = {
							garrison = yes
						}
					}
				}
				create_starbase = {
					size = "starbase_marauder"
					owner = event_target:marauder_country_1
				}
			}
			closest_system = {
				limit = {
					NOT = {
						exists = starbase
					}
				}
				star = {
					create_fleet = {
						effect = {
							set_owner = event_target:marauder_country_1
							create_ship = {
								name = random
								design = "NAME_Void_Dwelling"
								graphical_culture = "pirate_01"
							}
							set_location = {
								target = prev
								distance = 65
								angle = 0
							}
						}
					}
					create_fleet = {
						effect = {
							set_owner = event_target:marauder_country_1
							create_ship = {
								name = random
								design = "NAME_Void_Dwelling"
								graphical_culture = "pirate_01"
							}
							set_location = {
								target = prev
								distance = 115
								angle = 145
							}
						}
					}
					create_fleet = {
						effect = {
							set_owner = event_target:marauder_country_1
							create_ship = {
								name = random
								design = "NAME_Warrior_Freehold"
								graphical_culture = "pirate_01"
							}
							set_location = {
								target = prev
								distance = 95
								angle = 0
							}
						}
					}
					create_fleet = {
						effect = {
							set_owner = event_target:marauder_country_1
							create_ship = {
								name = random
								design = "NAME_Warrior_Freehold"
								graphical_culture = "pirate_01"
							}
							set_location = {
								target = prev
								distance = 95
								angle = 90
							}
						}
					}
					create_fleet = {
						effect = {
							set_owner = event_target:marauder_country_1
							create_ship = {
								name = random
								design = "NAME_Warrior_Freehold"
								graphical_culture = "pirate_01"
							}
							set_location = {
								target = prev
								distance = 95
								angle = 180
							}
						}
					}
					create_fleet = {
						effect = {
							set_owner = event_target:marauder_country_1
							create_ship = {
								name = random
								design = "NAME_Warrior_Freehold"
								graphical_culture = "pirate_01"
							}
							set_location = {
								target = prev
								distance = 95
								angle = 270
							}
						}
					}
					create_fleet = {
						effect = {
							set_owner = event_target:marauder_country_1
							create_ship = {
								name = random
								design = "NAME_Ancestral_Glory"
								graphical_culture = "pirate_01"
							}
							set_formation_scale = 2
							set_fleet_stance = aggressive
							set_aggro_range_measure_from = self
							set_aggro_range = 250
							set_location = {
								target = prev
								distance = 90
								angle = 220
							}
						}
						settings = {
							garrison = yes
						}
					}
					create_fleet = {
						effect = {
							set_owner = event_target:marauder_country_1
							while = {
								count = 22
								create_ship = {
									name = random
									design = "NAME_Outrider"
									graphical_culture = "pirate_01"
								}
							}
							while = {
								count = 14
								create_ship = {
									name = random
									design = "NAME_Lancer"
									graphical_culture = "pirate_01"
								}
							}
							while = {
								count = 8
								create_ship = {
									name = random
									design = "NAME_Void_Champion"
									graphical_culture = "pirate_01"
								}
							}
							set_formation_scale = 2
							set_fleet_stance = aggressive
							set_aggro_range_measure_from = self
							set_aggro_range = 250
							set_location = {
								target = prev
								distance = 100
								angle = 310
							}
						}
						settings = {
							garrison = yes
						}
					}
				}
				create_starbase = {
					size = "starbase_marauder"
					owner = event_target:marauder_country_1
				}
			}
		}
		random_system = {
			limit = {
				owner = {
					is_same_value = event_target:marauder_country_2
				}
			}
			closest_system = {
				limit = {
					NOT = {
						exists = starbase
					}
				}
				star = {
					create_fleet = {
						effect = {
							set_owner = event_target:marauder_country_2
							create_ship = {
								name = random
								design = "NAME_Void_Dwelling"
								graphical_culture = "pirate_01"
							}
							set_location = {
								target = prev
								distance = 65
								angle = 0
							}
						}
					}
					create_fleet = {
						effect = {
							set_owner = event_target:marauder_country_2
							create_ship = {
								name = random
								design = "NAME_Void_Dwelling"
								graphical_culture = "pirate_01"
							}
							set_location = {
								target = prev
								distance = 115
								angle = 145
							}
						}
					}
					create_fleet = {
						effect = {
							set_owner = event_target:marauder_country_2
							create_ship = {
								name = random
								design = "NAME_Ancestral_Glory"
								graphical_culture = "pirate_01"
							}
							set_formation_scale = 2
							set_fleet_stance = aggressive
							set_aggro_range_measure_from = self
							set_aggro_range = 250
							set_location = {
								target = prev
								distance = 90
								angle = 220
							}
						}
						settings = {
							garrison = yes
						}
					}
					create_fleet = {
						effect = {
							set_owner = event_target:marauder_country_2
							while = {
								count = 22
								create_ship = {
									name = random
									design = "NAME_Outrider"
									graphical_culture = "pirate_01"
								}
							}
							while = {
								count = 14
								create_ship = {
									name = random
									design = "NAME_Lancer"
									graphical_culture = "pirate_01"
								}
							}
							while = {
								count = 8
								create_ship = {
									name = random
									design = "NAME_Void_Champion"
									graphical_culture = "pirate_01"
								}
							}
							set_formation_scale = 2
							set_fleet_stance = aggressive
							set_aggro_range_measure_from = self
							set_aggro_range = 250
							set_location = {
								target = prev
								distance = 100
								angle = 310
							}
						}
						settings = {
							garrison = yes
						}
					}
				}
				create_starbase = {
					size = "starbase_marauder"
					owner = event_target:marauder_country_2
				}
			}
			closest_system = {
				limit = {
					NOT = {
						exists = starbase
					}
				}
				star = {
					create_fleet = {
						effect = {
							set_owner = event_target:marauder_country_2
							create_ship = {
								name = random
								design = "NAME_Void_Dwelling"
								graphical_culture = "pirate_01"
							}
							set_location = {
								target = prev
								distance = 65
								angle = 0
							}
						}
					}
					create_fleet = {
						effect = {
							set_owner = event_target:marauder_country_2
							create_ship = {
								name = random
								design = "NAME_Void_Dwelling"
								graphical_culture = "pirate_01"
							}
							set_location = {
								target = prev
								distance = 115
								angle = 145
							}
						}
					}
					create_fleet = {
						effect = {
							set_owner = event_target:marauder_country_2
							create_ship = {
								name = random
								design = "NAME_Warrior_Freehold"
								graphical_culture = "pirate_01"
							}
							set_location = {
								target = prev
								distance = 95
								angle = 0
							}
						}
					}
					create_fleet = {
						effect = {
							set_owner = event_target:marauder_country_2
							create_ship = {
								name = random
								design = "NAME_Warrior_Freehold"
								graphical_culture = "pirate_01"
							}
							set_location = {
								target = prev
								distance = 95
								angle = 90
							}
						}
					}
					create_fleet = {
						effect = {
							set_owner = event_target:marauder_country_2
							create_ship = {
								name = random
								design = "NAME_Warrior_Freehold"
								graphical_culture = "pirate_01"
							}
							set_location = {
								target = prev
								distance = 95
								angle = 180
							}
						}
					}
					create_fleet = {
						effect = {
							set_owner = event_target:marauder_country_2
							create_ship = {
								name = random
								design = "NAME_Warrior_Freehold"
								graphical_culture = "pirate_01"
							}
							set_location = {
								target = prev
								distance = 95
								angle = 270
							}
						}
					}
					create_fleet = {
						effect = {
							set_owner = event_target:marauder_country_2
							create_ship = {
								name = random
								design = "NAME_Ancestral_Glory"
								graphical_culture = "pirate_01"
							}
							set_formation_scale = 2
							set_fleet_stance = aggressive
							set_aggro_range_measure_from = self
							set_aggro_range = 250
							set_location = {
								target = prev
								distance = 90
								angle = 220
							}
						}
						settings = {
							garrison = yes
						}
					}
					create_fleet = {
						effect = {
							set_owner = event_target:marauder_country_2
							while = {
								count = 22
								create_ship = {
									name = random
									design = "NAME_Outrider"
									graphical_culture = "pirate_01"
								}
							}
							while = {
								count = 14
								create_ship = {
									name = random
									design = "NAME_Lancer"
									graphical_culture = "pirate_01"
								}
							}
							while = {
								count = 8
								create_ship = {
									name = random
									design = "NAME_Void_Champion"
									graphical_culture = "pirate_01"
								}
							}
							set_formation_scale = 2
							set_fleet_stance = aggressive
							set_aggro_range_measure_from = self
							set_aggro_range = 250
							set_location = {
								target = prev
								distance = 100
								angle = 310
							}
						}
						settings = {
							garrison = yes
						}
					}
				}
				create_starbase = {
					size = "starbase_marauder"
					owner = event_target:marauder_country_2
				}
			}
		}
		random_system = {
			limit = {
				owner = {
					is_same_value = event_target:marauder_country_3
				}
			}
			closest_system = {
				limit = {
					NOT = {
						exists = starbase
					}
				}
				star = {
					create_fleet = {
						effect = {
							set_owner = event_target:marauder_country_3
							create_ship = {
								name = random
								design = "NAME_Void_Dwelling"
								graphical_culture = "pirate_01"
							}
							set_location = {
								target = prev
								distance = 65
								angle = 0
							}
						}
					}
					create_fleet = {
						effect = {
							set_owner = event_target:marauder_country_3
							create_ship = {
								name = random
								design = "NAME_Void_Dwelling"
								graphical_culture = "pirate_01"
							}
							set_location = {
								target = prev
								distance = 115
								angle = 145
							}
						}
					}
					create_fleet = {
						effect = {
							set_owner = event_target:marauder_country_3
							create_ship = {
								name = random
								design = "NAME_Ancestral_Glory"
								graphical_culture = "pirate_01"
							}
							set_formation_scale = 2
							set_fleet_stance = aggressive
							set_aggro_range_measure_from = self
							set_aggro_range = 250
							set_location = {
								target = prev
								distance = 90
								angle = 220
							}
						}
						settings = {
							garrison = yes
						}
					}
					create_fleet = {
						effect = {
							set_owner = event_target:marauder_country_3
							while = {
								count = 22
								create_ship = {
									name = random
									design = "NAME_Outrider"
									graphical_culture = "pirate_01"
								}
							}
							while = {
								count = 14
								create_ship = {
									name = random
									design = "NAME_Lancer"
									graphical_culture = "pirate_01"
								}
							}
							while = {
								count = 8
								create_ship = {
									name = random
									design = "NAME_Void_Champion"
									graphical_culture = "pirate_01"
								}
							}
							set_formation_scale = 2
							set_fleet_stance = aggressive
							set_aggro_range_measure_from = self
							set_aggro_range = 250
							set_location = {
								target = prev
								distance = 100
								angle = 310
							}
						}
						settings = {
							garrison = yes
						}
					}
				}
				create_starbase = {
					size = "starbase_marauder"
					owner = event_target:marauder_country_3
				}
			}
			closest_system = {
				limit = {
					NOT = {
						exists = starbase
					}
				}
				star = {
					create_fleet = {
						effect = {
							set_owner = event_target:marauder_country_3
							create_ship = {
								name = random
								design = "NAME_Void_Dwelling"
								graphical_culture = "pirate_01"
							}
							set_location = {
								target = prev
								distance = 65
								angle = 0
							}
						}
					}
					create_fleet = {
						effect = {
							set_owner = event_target:marauder_country_3
							create_ship = {
								name = random
								design = "NAME_Void_Dwelling"
								graphical_culture = "pirate_01"
							}
							set_location = {
								target = prev
								distance = 115
								angle = 145
							}
						}
					}
					create_fleet = {
						effect = {
							set_owner = event_target:marauder_country_3
							create_ship = {
								name = random
								design = "NAME_Warrior_Freehold"
								graphical_culture = "pirate_01"
							}
							set_location = {
								target = prev
								distance = 95
								angle = 0
							}
						}
					}
					create_fleet = {
						effect = {
							set_owner = event_target:marauder_country_3
							create_ship = {
								name = random
								design = "NAME_Warrior_Freehold"
								graphical_culture = "pirate_01"
							}
							set_location = {
								target = prev
								distance = 95
								angle = 90
							}
						}
					}
					create_fleet = {
						effect = {
							set_owner = event_target:marauder_country_3
							create_ship = {
								name = random
								design = "NAME_Warrior_Freehold"
								graphical_culture = "pirate_01"
							}
							set_location = {
								target = prev
								distance = 95
								angle = 180
							}
						}
					}
					create_fleet = {
						effect = {
							set_owner = event_target:marauder_country_3
							create_ship = {
								name = random
								design = "NAME_Warrior_Freehold"
								graphical_culture = "pirate_01"
							}
							set_location = {
								target = prev
								distance = 95
								angle = 270
							}
						}
					}
					create_fleet = {
						effect = {
							set_owner = event_target:marauder_country_3
							create_ship = {
								name = random
								design = "NAME_Ancestral_Glory"
								graphical_culture = "pirate_01"
							}
							set_formation_scale = 2
							set_fleet_stance = aggressive
							set_aggro_range_measure_from = self
							set_aggro_range = 250
							set_location = {
								target = prev
								distance = 90
								angle = 220
							}
						}
						settings = {
							garrison = yes
						}
					}
					create_fleet = {
						effect = {
							set_owner = event_target:marauder_country_3
							while = {
								count = 22
								create_ship = {
									name = random
									design = "NAME_Outrider"
									graphical_culture = "pirate_01"
								}
							}
							while = {
								count = 14
								create_ship = {
									name = random
									design = "NAME_Lancer"
									graphical_culture = "pirate_01"
								}
							}
							while = {
								count = 8
								create_ship = {
									name = random
									design = "NAME_Void_Champion"
									graphical_culture = "pirate_01"
								}
							}
							set_formation_scale = 2
							set_fleet_stance = aggressive
							set_aggro_range_measure_from = self
							set_aggro_range = 250
							set_location = {
								target = prev
								distance = 100
								angle = 310
							}
						}
						settings = {
							garrison = yes
						}
					}
				}
				create_starbase = {
					size = "starbase_marauder"
					owner = event_target:marauder_country_3
				}
			}
		}
	}
}

event = {
	id = sps_smgg.5
	is_triggered_only = yes
	hide_window = yes
	
	immediate = {
		every_country = {
			limit = { 
				is_country_type = default	
				NOR = {
					has_origin = origin_life_seeded
					has_origin = origin_ocean_paradise
					has_origin = origin_common_ground
					has_origin = origin_common_ground_npc
					has_origin = origin_hegemon
					has_origin = origin_hegemon_npc
					has_origin = origin_doomsday
					has_origin = origin_shattered_ring
					has_origin = origin_void_dwellers
				}
			}
			if = { limit = { num_guaranteed_colonies = 1 }
			random_galaxy_planet = {
				limit = {
					distance = {
						source = prev
						type = hyperlane
						use_bypasses = no
						bypass_empire = prev
						min_jumps = 1
						max_jumps = 2
						min_distance >= 1
						max_distance <= 50
						}
						planet_size > 12
						planet_size < 20
						uninhabitable_regular_planet = yes
					}
					prev = {
						switch = {
						trigger = ideal_planet_class
							pc_continental = { prev = { 
								change_pc = pc_continental 
								reroll_deposits = yes
							} }
							pc_ocean = { prev = { 
								change_pc = pc_ocean
								reroll_deposits = yes
							} }
							pc_tropical = { prev = { 
								change_pc = pc_tropical
								reroll_deposits = yes 
							} }
							pc_desert = { prev = { 
								change_pc = pc_desert
								reroll_deposits = yes 
							} }
							pc_arid = { prev = { 
								change_pc = pc_arid 
								reroll_deposits = yes
							} }
							pc_savannah = { prev = { 
								change_pc = pc_savannah
								reroll_deposits = yes 
							} }
							pc_arctic = { prev = { 
								change_pc = pc_arctic
								reroll_deposits = yes 
							} }
							pc_alpine = { prev = { 
								change_pc = pc_alpine
								reroll_deposits = yes 
							} }
							pc_tundra = { prev = { 
								change_pc = pc_tundra
								reroll_deposits = yes 
							} }
						}
					}	
				}
			}
			if = {
				limit = { num_guaranteed_colonies = 2 }
				while = {
					count = 2
					random_galaxy_planet = {
						limit = {
							distance = {
								source = prev
								type = hyperlane
								use_bypasses = no
								bypass_empire = prev
								min_jumps = 1
								max_jumps = 2
								min_distance >= 1
								max_distance <= 50
								}
								planet_size > 12
								planet_size < 20
								uninhabitable_regular_planet = yes
							}
							prev = {
								switch = {
								trigger = ideal_planet_class
									pc_continental = { prev = { 
										change_pc = pc_continental 
										reroll_deposits = yes
									} }
									pc_ocean = { prev = { 
										change_pc = pc_ocean
										reroll_deposits = yes
									} }
									pc_tropical = { prev = { 
										change_pc = pc_tropical
										reroll_deposits = yes 
									} }
									pc_desert = { prev = { 
										change_pc = pc_desert
										reroll_deposits = yes 
									} }
									pc_arid = { prev = { 
										change_pc = pc_arid 
										reroll_deposits = yes
									} }
									pc_savannah = { prev = { 
										change_pc = pc_savannah
										reroll_deposits = yes 
									} }
									pc_arctic = { prev = { 
										change_pc = pc_arctic
										reroll_deposits = yes 
									} }
									pc_alpine = { prev = { 
										change_pc = pc_alpine
										reroll_deposits = yes 
									} }
									pc_tundra = { prev = { 
										change_pc = pc_tundra
										reroll_deposits = yes 
									} }
							}
						}	
					}
				}
			}
		}
	}
}

event = {
	id = sps_smgg.6
	hide_window = no
	is_triggered_only = yes

	immediate = {
		every_system = {
			random_system_planet = {
				limit = {
					has_planet_flag = central_wormhole_flag
				}
				prev = {
					spawn_megastructure = {
						type = central_wormhole_base
						name = "Strange Anomaly"
					}
				}
			}
		}
	}
}

event = {
	id = sps_smgg.10
	hide_window = yes
	is_triggered_only = yes


	immediate = {
		# Spawn special/hidden countries
		#country_event = {
		#	id = game_start.1 # Spawn special/hidden countries
		#}
		# removes random planet modifiers from homeworlds
		#country_event = {
		#	id = game_start.2
		#}
		every_country = {
			random_system = {
				
			}
			limit = { is_country_type = default }
			# Hidden Game Start Event that resets tutorial for advisor trigger purposes
			country_event = {
				id = game_start.3
			}

			# Add origin hyperlanes and stations in capital system
			country_event = {
				id = game_start.33
			}
			#Tech and resources
			country_event = {
				id = game_start.8
			}
			capital_scope = {
				# Pop, buildings and districts
				planet_event = {
					id = game_start.12
				}
			}
			### Empire init - populate home system
			country_event = {
				id = game_start.33
			}
		}
	}
}

event = {
	id = sps_smgg.11
	is_triggered_only = yes
	hide_window = yes

	immediate = {
		every_system = {
			limit = { is_inside_nebula = yes }
			# Class B
			if = {
				limit = {
					OR = {
						is_star_class = sc_b
						is_star_class = sc_binary_2
						is_star_class = sc_binary_5
						is_star_class = sc_trinary_2
						is_star_class = sc_trinary_4
					}
				}
				random_list = {
					20 = { create_nebula_3 = yes }
					20 = { create_nebula_4 = yes }
					10 = { create_rare_nebula_1 = yes }
					4 = {
						modifier = {
							factor = 0
							has_star_flag = empire_home_system
						}
						create_turbulent_nebula_1 = yes
					}
				}
			}
			# Class A
			else_if = {
				limit = {
					OR = {
						is_star_class = sc_a
						is_star_class = sc_binary_1
						is_star_class = sc_binary_9
						is_star_class = sc_binary_10
					}
				}
				if = {
					limit = { has_star_flag = ocean_paradise_nebula }
					create_rare_nebula_1 = yes
				}
				else = {
					random_list = {
						20 = { create_nebula_3 = yes }
						20 = { create_nebula_4 = yes }
						10 = { create_rare_nebula_1 = yes }
						10 = { create_rare_nebula_2 = yes }
						4 = {
							modifier = {
								factor = 0
								has_star_flag = empire_home_system
							}
							create_turbulent_nebula_1 = yes
						}
						4 = {
							modifier = {
								factor = 0
								has_star_flag = empire_home_system
							}
							create_turbulent_nebula_2 = yes
						}
					}
				}
			}
			# Class F
			else_if = {
				limit = { is_star_class = sc_f }
				random_list = {
					20 = { create_nebula_3 = yes }
					20 = { create_nebula_4 = yes }
					10 = { create_rare_nebula_1 = yes }
					4 = {
						modifier = {
							factor = 0
							has_star_flag = empire_home_system
						}
						create_turbulent_nebula_1 = yes
					}
				}
			}
			# Class G
			else_if = {
				limit = {
					OR = {
						is_star_class = sc_g
						is_star_class = sc_binary_8
						is_star_class = sc_trinary_1
					}
				}
				random_list = {
					20 = { create_nebula_1 = yes }
					10 = { create_rare_nebula_2 = yes }
					4 = {
						modifier = {
							factor = 0
							has_star_flag = empire_home_system
						}
						create_turbulent_nebula_2 = yes
					}
				}
			}
			# Class K
			else_if = {
				limit = {
					OR = {
						is_star_class = sc_k
						is_star_class = sc_binary_7
						is_star_class = sc_trinary_3
					}
				}
				random_list = {
					20 = { create_nebula_1 = yes }
					20 = { create_nebula_2 = yes }
					10 = { create_rare_nebula_2 = yes }
					4 = {
						modifier = {
							factor = 0
							has_star_flag = empire_home_system
						}
						create_turbulent_nebula_2 = yes
					}
				}
			}
			# Class M
			else_if = {
				limit = {
					OR = {
						is_star_class = sc_m
						is_star_class = sc_m_giant
						is_star_class = sc_binary_3
						is_star_class = sc_binary_4
						is_star_class = sc_binary_6
					}
				}
				random_list = {
					20 = { create_nebula_1 = yes }
					20 = { create_nebula_2 = yes }
					10 = { create_rare_nebula_2 = yes }
					4 = {
						modifier = {
							factor = 0
							has_star_flag = empire_home_system
						}
						create_turbulent_nebula_2 = yes
					}
				}
			}
			# Class T
			else_if = {
				limit = { is_star_class = sc_t }
				random_list = {
					20 = { create_nebula_3 = yes }
					10 = { create_rare_nebula_1 = yes }
					4 = {
						modifier = {
							factor = 0
							has_star_flag = empire_home_system
						}
						create_turbulent_nebula_1 = yes
					}
				}
			}
			# Black Hole
			else_if = {
				limit = { is_star_class = sc_black_hole }
				random_list = {
					20 = { create_nebula_1 = yes }
					20 = { create_nebula_2 = yes }
					20 = { create_nebula_3 = yes }
					20 = { create_nebula_4 = yes }
					10 = { create_rare_nebula_1 = yes }
					10 = { create_rare_nebula_2 = yes }
					4 = {
						modifier = {
							factor = 0
							has_star_flag = empire_home_system
						}
						create_turbulent_nebula_1 = yes
					}
					4 = {
						modifier = {
							factor = 0
							has_star_flag = empire_home_system
						}
						create_turbulent_nebula_2 = yes
					}
				}
			}
			# Neutron Star
			else_if = {
				limit = { is_star_class = sc_neutron_star }
				random_list = {
					20 = { create_nebula_3 = yes }
					20 = { create_nebula_4 = yes }
					10 = { create_rare_nebula_1 = yes }
					10 = { create_rare_nebula_2 = yes }
					4 = {
						modifier = {
							factor = 0
							has_star_flag = empire_home_system
						}
						create_turbulent_nebula_1 = yes
					}
					4 = {
						modifier = {
							factor = 0
							has_star_flag = empire_home_system
						}
						create_turbulent_nebula_2 = yes
					}
				}
			}
			# Pulsar
			else_if = {
				limit = { is_star_class = sc_pulsar }
				random_list = {
					20 = { create_nebula_3 = yes }
					20 = { create_nebula_4 = yes }
					10 = { create_rare_nebula_1 = yes }
					10 = { create_rare_nebula_2 = yes }
					4 = {
						modifier = {
							factor = 0
							has_star_flag = empire_home_system
						}
						create_turbulent_nebula_1 = yes
					}
					4 = {
						modifier = {
							factor = 0
							has_star_flag = empire_home_system
						}
						create_turbulent_nebula_2 = yes
					}
				}
			}
		}
	}
}