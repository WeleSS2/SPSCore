namespace = sps_smgg

# 1 - 
# 2 - Zmiana klasy planety
# 3 - 2nd race fixes
# 4 - Maruders Fix
# 5 - Guaranteed Worlds fix
# 6 - Central Black Holes
# 10 - Vanilla events for empires (Pops, buildings, deposits e.t.c)
# 20 - 110 Fallen Empire fixes
# 130-140 Added traditions events
# Discovery
# Adaptability
# Domination
# Diplomacy
# Expansion
# Harmony
# Mercantile
# Prosperity
# Subterfuge
# Supremacy
# Unyielding
# 
# 
# 
# 
# 
# 
# 
# 
# 
# 
# 
# 
# 
# 
# 
# 
event = {
    id = sps_smgg.2
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		every_country = {
			limit = { is_country_type = default }
			if = {
				limit = { capital_scope = { is_ideal_planet_class = { who = PREV status = no } } }
				switch = {
					trigger = ideal_planet_class
					pc_continental = { capital_scope = { change_pc = pc_continental } }
					pc_ocean = { capital_scope = { change_pc = pc_ocean } }
					pc_tropical = { capital_scope = { change_pc = pc_tropical } }
					pc_desert = { capital_scope = { change_pc = pc_desert } }
					pc_arid = { capital_scope = { change_pc = pc_arid } }
					pc_savannah = { capital_scope = { change_pc = pc_savannah } }
					pc_arctic = { capital_scope = { change_pc = pc_arctic } }
					pc_alpine = { capital_scope = { change_pc = pc_alpine } }
					pc_tundra = { capital_scope = { change_pc = pc_tundra } }
					pc_hive = { capital_scope = { change_pc = pc_hive } }
					pc_machine = { capital_scope = { change_pc = pc_machine } }
				}
			}
			if = {
				limit = { is_machine_empire = yes }
				capital_scope = {
					change_pc = rl_habitable_normal
				}
			}
			if = {
				limit = { has_origin = origin_remnants }
				capital_scope = {
					change_pc = pc_relic
				}
			}
			switch = {
				trigger = has_origin
				origin_life_seeded = {
					capital_scope = {
						change_pc = pc_gaia
					}
					modify_species = {
						species = owner_main_species
						ideal_planet_class = pc_gaia
					}
				}
				origin_post_apocalyptic = {
					capital_scope = {
						change_pc = pc_nuked
						modify_species = {
							species = this
							ideal_planet_class = pc_nuked
						}
					}
				}
				origin_tree_of_life = {
					capital_scope = {
						remove_modifier = no_lifetree
					}
				}
				origin_origin_ocean_paradise = {
					capital_scope = {
						change_pc = pc_ocean
					}
				}
			}
		}
	}
}
# Empire default fix

event = {
	id = sps_smgg.3
	is_triggered_only = yes
	hide_window = yes

	immediate = {

	}
}

event = {
	id = sps_smgg.4
	is_triggered_only = yes
	hide_window = yes
	immediate = {
		random_system = {
			limit = {
				owner = {
					is_same_value = event_target:marauder_country_1
				}
			}
			closest_system = {
				limit = {
					NOT = {
						exists = starbase
					}
				}
				star = {
					create_fleet = {
						effect = {
							set_owner = event_target:marauder_country_1
							create_ship = {
								name = random
								design = "NAME_Void_Dwelling"
								graphical_culture = "pirate_01"
							}
							set_location = {
								target = prev
								distance = 65
								angle = 0
							}
						}
					}
					create_fleet = {
						effect = {
							set_owner = event_target:marauder_country_1
							create_ship = {
								name = random
								design = "NAME_Void_Dwelling"
								graphical_culture = "pirate_01"
							}
							set_location = {
								target = prev
								distance = 115
								angle = 145
							}
						}
					}
					create_fleet = {
						effect = {
							set_owner = event_target:marauder_country_1
							create_ship = {
								name = random
								design = "NAME_Ancestral_Glory"
								graphical_culture = "pirate_01"
							}
							set_formation_scale = 2
							set_fleet_stance = aggressive
							set_aggro_range_measure_from = self
							set_aggro_range = 250
							set_location = {
								target = prev
								distance = 90
								angle = 220
							}
						}
						settings = {
							garrison = yes
						}
					}
					create_fleet = {
						effect = {
							set_owner = event_target:marauder_country_1
							while = {
								count = 22
								create_ship = {
									name = random
									design = "NAME_Outrider"
									graphical_culture = "pirate_01"
								}
							}
							while = {
								count = 14
								create_ship = {
									name = random
									design = "NAME_Lancer"
									graphical_culture = "pirate_01"
								}
							}
							while = {
								count = 8
								create_ship = {
									name = random
									design = "NAME_Void_Champion"
									graphical_culture = "pirate_01"
								}
							}
							set_formation_scale = 2
							set_fleet_stance = aggressive
							set_aggro_range_measure_from = self
							set_aggro_range = 250
							set_location = {
								target = prev
								distance = 100
								angle = 310
							}
						}
						settings = {
							garrison = yes
						}
					}
				}
				create_starbase = {
					size = "starbase_marauder"
					owner = event_target:marauder_country_1
				}
			}
			closest_system = {
				limit = {
					NOT = {
						exists = starbase
					}
				}
				star = {
					create_fleet = {
						effect = {
							set_owner = event_target:marauder_country_1
							create_ship = {
								name = random
								design = "NAME_Void_Dwelling"
								graphical_culture = "pirate_01"
							}
							set_location = {
								target = prev
								distance = 65
								angle = 0
							}
						}
					}
					create_fleet = {
						effect = {
							set_owner = event_target:marauder_country_1
							create_ship = {
								name = random
								design = "NAME_Void_Dwelling"
								graphical_culture = "pirate_01"
							}
							set_location = {
								target = prev
								distance = 115
								angle = 145
							}
						}
					}
					create_fleet = {
						effect = {
							set_owner = event_target:marauder_country_1
							create_ship = {
								name = random
								design = "NAME_Warrior_Freehold"
								graphical_culture = "pirate_01"
							}
							set_location = {
								target = prev
								distance = 95
								angle = 0
							}
						}
					}
					create_fleet = {
						effect = {
							set_owner = event_target:marauder_country_1
							create_ship = {
								name = random
								design = "NAME_Warrior_Freehold"
								graphical_culture = "pirate_01"
							}
							set_location = {
								target = prev
								distance = 95
								angle = 90
							}
						}
					}
					create_fleet = {
						effect = {
							set_owner = event_target:marauder_country_1
							create_ship = {
								name = random
								design = "NAME_Warrior_Freehold"
								graphical_culture = "pirate_01"
							}
							set_location = {
								target = prev
								distance = 95
								angle = 180
							}
						}
					}
					create_fleet = {
						effect = {
							set_owner = event_target:marauder_country_1
							create_ship = {
								name = random
								design = "NAME_Warrior_Freehold"
								graphical_culture = "pirate_01"
							}
							set_location = {
								target = prev
								distance = 95
								angle = 270
							}
						}
					}
					create_fleet = {
						effect = {
							set_owner = event_target:marauder_country_1
							create_ship = {
								name = random
								design = "NAME_Ancestral_Glory"
								graphical_culture = "pirate_01"
							}
							set_formation_scale = 2
							set_fleet_stance = aggressive
							set_aggro_range_measure_from = self
							set_aggro_range = 250
							set_location = {
								target = prev
								distance = 90
								angle = 220
							}
						}
						settings = {
							garrison = yes
						}
					}
					create_fleet = {
						effect = {
							set_owner = event_target:marauder_country_1
							while = {
								count = 22
								create_ship = {
									name = random
									design = "NAME_Outrider"
									graphical_culture = "pirate_01"
								}
							}
							while = {
								count = 14
								create_ship = {
									name = random
									design = "NAME_Lancer"
									graphical_culture = "pirate_01"
								}
							}
							while = {
								count = 8
								create_ship = {
									name = random
									design = "NAME_Void_Champion"
									graphical_culture = "pirate_01"
								}
							}
							set_formation_scale = 2
							set_fleet_stance = aggressive
							set_aggro_range_measure_from = self
							set_aggro_range = 250
							set_location = {
								target = prev
								distance = 100
								angle = 310
							}
						}
						settings = {
							garrison = yes
						}
					}
				}
				create_starbase = {
					size = "starbase_marauder"
					owner = event_target:marauder_country_1
				}
			}
		}
		random_system = {
			limit = {
				owner = {
					is_same_value = event_target:marauder_country_2
				}
			}
			closest_system = {
				limit = {
					NOT = {
						exists = starbase
					}
				}
				star = {
					create_fleet = {
						effect = {
							set_owner = event_target:marauder_country_2
							create_ship = {
								name = random
								design = "NAME_Void_Dwelling"
								graphical_culture = "pirate_01"
							}
							set_location = {
								target = prev
								distance = 65
								angle = 0
							}
						}
					}
					create_fleet = {
						effect = {
							set_owner = event_target:marauder_country_2
							create_ship = {
								name = random
								design = "NAME_Void_Dwelling"
								graphical_culture = "pirate_01"
							}
							set_location = {
								target = prev
								distance = 115
								angle = 145
							}
						}
					}
					create_fleet = {
						effect = {
							set_owner = event_target:marauder_country_2
							create_ship = {
								name = random
								design = "NAME_Ancestral_Glory"
								graphical_culture = "pirate_01"
							}
							set_formation_scale = 2
							set_fleet_stance = aggressive
							set_aggro_range_measure_from = self
							set_aggro_range = 250
							set_location = {
								target = prev
								distance = 90
								angle = 220
							}
						}
						settings = {
							garrison = yes
						}
					}
					create_fleet = {
						effect = {
							set_owner = event_target:marauder_country_2
							while = {
								count = 22
								create_ship = {
									name = random
									design = "NAME_Outrider"
									graphical_culture = "pirate_01"
								}
							}
							while = {
								count = 14
								create_ship = {
									name = random
									design = "NAME_Lancer"
									graphical_culture = "pirate_01"
								}
							}
							while = {
								count = 8
								create_ship = {
									name = random
									design = "NAME_Void_Champion"
									graphical_culture = "pirate_01"
								}
							}
							set_formation_scale = 2
							set_fleet_stance = aggressive
							set_aggro_range_measure_from = self
							set_aggro_range = 250
							set_location = {
								target = prev
								distance = 100
								angle = 310
							}
						}
						settings = {
							garrison = yes
						}
					}
				}
				create_starbase = {
					size = "starbase_marauder"
					owner = event_target:marauder_country_2
				}
			}
			closest_system = {
				limit = {
					NOT = {
						exists = starbase
					}
				}
				star = {
					create_fleet = {
						effect = {
							set_owner = event_target:marauder_country_2
							create_ship = {
								name = random
								design = "NAME_Void_Dwelling"
								graphical_culture = "pirate_01"
							}
							set_location = {
								target = prev
								distance = 65
								angle = 0
							}
						}
					}
					create_fleet = {
						effect = {
							set_owner = event_target:marauder_country_2
							create_ship = {
								name = random
								design = "NAME_Void_Dwelling"
								graphical_culture = "pirate_01"
							}
							set_location = {
								target = prev
								distance = 115
								angle = 145
							}
						}
					}
					create_fleet = {
						effect = {
							set_owner = event_target:marauder_country_2
							create_ship = {
								name = random
								design = "NAME_Warrior_Freehold"
								graphical_culture = "pirate_01"
							}
							set_location = {
								target = prev
								distance = 95
								angle = 0
							}
						}
					}
					create_fleet = {
						effect = {
							set_owner = event_target:marauder_country_2
							create_ship = {
								name = random
								design = "NAME_Warrior_Freehold"
								graphical_culture = "pirate_01"
							}
							set_location = {
								target = prev
								distance = 95
								angle = 90
							}
						}
					}
					create_fleet = {
						effect = {
							set_owner = event_target:marauder_country_2
							create_ship = {
								name = random
								design = "NAME_Warrior_Freehold"
								graphical_culture = "pirate_01"
							}
							set_location = {
								target = prev
								distance = 95
								angle = 180
							}
						}
					}
					create_fleet = {
						effect = {
							set_owner = event_target:marauder_country_2
							create_ship = {
								name = random
								design = "NAME_Warrior_Freehold"
								graphical_culture = "pirate_01"
							}
							set_location = {
								target = prev
								distance = 95
								angle = 270
							}
						}
					}
					create_fleet = {
						effect = {
							set_owner = event_target:marauder_country_2
							create_ship = {
								name = random
								design = "NAME_Ancestral_Glory"
								graphical_culture = "pirate_01"
							}
							set_formation_scale = 2
							set_fleet_stance = aggressive
							set_aggro_range_measure_from = self
							set_aggro_range = 250
							set_location = {
								target = prev
								distance = 90
								angle = 220
							}
						}
						settings = {
							garrison = yes
						}
					}
					create_fleet = {
						effect = {
							set_owner = event_target:marauder_country_2
							while = {
								count = 22
								create_ship = {
									name = random
									design = "NAME_Outrider"
									graphical_culture = "pirate_01"
								}
							}
							while = {
								count = 14
								create_ship = {
									name = random
									design = "NAME_Lancer"
									graphical_culture = "pirate_01"
								}
							}
							while = {
								count = 8
								create_ship = {
									name = random
									design = "NAME_Void_Champion"
									graphical_culture = "pirate_01"
								}
							}
							set_formation_scale = 2
							set_fleet_stance = aggressive
							set_aggro_range_measure_from = self
							set_aggro_range = 250
							set_location = {
								target = prev
								distance = 100
								angle = 310
							}
						}
						settings = {
							garrison = yes
						}
					}
				}
				create_starbase = {
					size = "starbase_marauder"
					owner = event_target:marauder_country_2
				}
			}
		}
		random_system = {
			limit = {
				owner = {
					is_same_value = event_target:marauder_country_3
				}
			}
			closest_system = {
				limit = {
					NOT = {
						exists = starbase
					}
				}
				star = {
					create_fleet = {
						effect = {
							set_owner = event_target:marauder_country_3
							create_ship = {
								name = random
								design = "NAME_Void_Dwelling"
								graphical_culture = "pirate_01"
							}
							set_location = {
								target = prev
								distance = 65
								angle = 0
							}
						}
					}
					create_fleet = {
						effect = {
							set_owner = event_target:marauder_country_3
							create_ship = {
								name = random
								design = "NAME_Void_Dwelling"
								graphical_culture = "pirate_01"
							}
							set_location = {
								target = prev
								distance = 115
								angle = 145
							}
						}
					}
					create_fleet = {
						effect = {
							set_owner = event_target:marauder_country_3
							create_ship = {
								name = random
								design = "NAME_Ancestral_Glory"
								graphical_culture = "pirate_01"
							}
							set_formation_scale = 2
							set_fleet_stance = aggressive
							set_aggro_range_measure_from = self
							set_aggro_range = 250
							set_location = {
								target = prev
								distance = 90
								angle = 220
							}
						}
						settings = {
							garrison = yes
						}
					}
					create_fleet = {
						effect = {
							set_owner = event_target:marauder_country_3
							while = {
								count = 22
								create_ship = {
									name = random
									design = "NAME_Outrider"
									graphical_culture = "pirate_01"
								}
							}
							while = {
								count = 14
								create_ship = {
									name = random
									design = "NAME_Lancer"
									graphical_culture = "pirate_01"
								}
							}
							while = {
								count = 8
								create_ship = {
									name = random
									design = "NAME_Void_Champion"
									graphical_culture = "pirate_01"
								}
							}
							set_formation_scale = 2
							set_fleet_stance = aggressive
							set_aggro_range_measure_from = self
							set_aggro_range = 250
							set_location = {
								target = prev
								distance = 100
								angle = 310
							}
						}
						settings = {
							garrison = yes
						}
					}
				}
				create_starbase = {
					size = "starbase_marauder"
					owner = event_target:marauder_country_3
				}
			}
			closest_system = {
				limit = {
					NOT = {
						exists = starbase
					}
				}
				star = {
					create_fleet = {
						effect = {
							set_owner = event_target:marauder_country_3
							create_ship = {
								name = random
								design = "NAME_Void_Dwelling"
								graphical_culture = "pirate_01"
							}
							set_location = {
								target = prev
								distance = 65
								angle = 0
							}
						}
					}
					create_fleet = {
						effect = {
							set_owner = event_target:marauder_country_3
							create_ship = {
								name = random
								design = "NAME_Void_Dwelling"
								graphical_culture = "pirate_01"
							}
							set_location = {
								target = prev
								distance = 115
								angle = 145
							}
						}
					}
					create_fleet = {
						effect = {
							set_owner = event_target:marauder_country_3
							create_ship = {
								name = random
								design = "NAME_Warrior_Freehold"
								graphical_culture = "pirate_01"
							}
							set_location = {
								target = prev
								distance = 95
								angle = 0
							}
						}
					}
					create_fleet = {
						effect = {
							set_owner = event_target:marauder_country_3
							create_ship = {
								name = random
								design = "NAME_Warrior_Freehold"
								graphical_culture = "pirate_01"
							}
							set_location = {
								target = prev
								distance = 95
								angle = 90
							}
						}
					}
					create_fleet = {
						effect = {
							set_owner = event_target:marauder_country_3
							create_ship = {
								name = random
								design = "NAME_Warrior_Freehold"
								graphical_culture = "pirate_01"
							}
							set_location = {
								target = prev
								distance = 95
								angle = 180
							}
						}
					}
					create_fleet = {
						effect = {
							set_owner = event_target:marauder_country_3
							create_ship = {
								name = random
								design = "NAME_Warrior_Freehold"
								graphical_culture = "pirate_01"
							}
							set_location = {
								target = prev
								distance = 95
								angle = 270
							}
						}
					}
					create_fleet = {
						effect = {
							set_owner = event_target:marauder_country_3
							create_ship = {
								name = random
								design = "NAME_Ancestral_Glory"
								graphical_culture = "pirate_01"
							}
							set_formation_scale = 2
							set_fleet_stance = aggressive
							set_aggro_range_measure_from = self
							set_aggro_range = 250
							set_location = {
								target = prev
								distance = 90
								angle = 220
							}
						}
						settings = {
							garrison = yes
						}
					}
					create_fleet = {
						effect = {
							set_owner = event_target:marauder_country_3
							while = {
								count = 22
								create_ship = {
									name = random
									design = "NAME_Outrider"
									graphical_culture = "pirate_01"
								}
							}
							while = {
								count = 14
								create_ship = {
									name = random
									design = "NAME_Lancer"
									graphical_culture = "pirate_01"
								}
							}
							while = {
								count = 8
								create_ship = {
									name = random
									design = "NAME_Void_Champion"
									graphical_culture = "pirate_01"
								}
							}
							set_formation_scale = 2
							set_fleet_stance = aggressive
							set_aggro_range_measure_from = self
							set_aggro_range = 250
							set_location = {
								target = prev
								distance = 100
								angle = 310
							}
						}
						settings = {
							garrison = yes
						}
					}
				}
				create_starbase = {
					size = "starbase_marauder"
					owner = event_target:marauder_country_3
				}
			}
		}
	}
}

event = {
	id = sps_smgg.5
	is_triggered_only = yes
	hide_window = yes
	
	immediate = {
		every_country = {
			limit = { 
				is_country_type = default	
				NOR = {
					has_origin = origin_life_seeded
					has_origin = origin_common_ground
					has_origin = origin_common_ground_npc
					has_origin = origin_hegemon
					has_origin = origin_hegemon_npc
					has_origin = origin_doomsday
					has_origin = origin_shattered_ring
					has_origin = origin_void_dwellers
				}
			}
			if = { limit = { num_guaranteed_colonies = 1 }
				random_system = {
					limit = {
						distance = {
						source = prev
						type = hyperlane
						use_bypasses = no
						bypass_empire = prev
						min_jumps = 1
						max_jumps = 3
						min_distance >= 1
						max_distance <= 50
						}
					}
					create_starbase = {
						size = starbase_outpost
						owner = prev
						}
					random_system_planet = {
						limit = {
							planet_size > 5
							planet_size < 20
							uninhabitable_regular_planet = yes
							}
							prevprev = {
								switch = {
								trigger = ideal_planet_class
								pc_continental = { prev = { 
									change_pc = pc_continental 
									reroll_deposits = yes
								} }
								pc_ocean = { prev = { 
									change_pc = pc_ocean
									reroll_deposits = yes
								} }
								pc_tropical = { prev = { 
									change_pc = pc_tropical
									reroll_deposits = yes 
								} }
								pc_desert = { prev = { 
									change_pc = pc_desert
									reroll_deposits = yes 
								} }
								pc_arid = { prev = { 
									change_pc = pc_arid 
									reroll_deposits = yes
								} }
								pc_savannah = { prev = { 
									change_pc = pc_savannah
									reroll_deposits = yes 
								} }
								pc_arctic = { prev = { 
									change_pc = pc_arctic
									reroll_deposits = yes 
								} }
								pc_alpine = { prev = { 
									change_pc = pc_alpine
									reroll_deposits = yes 
								} }
								pc_tundra = { prev = { 
									change_pc = pc_tundra
									reroll_deposits = yes 
								} }
								}
							}
						}	
					}
				}
			if = {
				limit = { num_guaranteed_colonies = 2 }
				while = {
					count = 2
					random_system = {
						limit = {
							distance = {
								source = prev
								type = hyperlane
								use_bypasses = no
								bypass_empire = prev
								min_jumps = 1
								max_jumps = 3
								min_distance >= 1
								max_distance <= 50
								}
							}
							random_system_planet = {
								limit = {
									planet_size > 12
									planet_size < 20
									uninhabitable_regular_planet = yes
									}
								prevprev = {
									switch = {
									trigger = ideal_planet_class
										pc_continental = { prev = { 
											change_pc = pc_continental 
											reroll_deposits = yes
										} }
										pc_ocean = { prev = { 
											change_pc = pc_ocean
											reroll_deposits = yes
										} }
										pc_tropical = { prev = { 
											change_pc = pc_tropical
											reroll_deposits = yes 
										} }
										pc_desert = { prev = { 
											change_pc = pc_desert
											reroll_deposits = yes 
										} }
										pc_arid = { prev = { 
											change_pc = pc_arid 
											reroll_deposits = yes
										} }
										pc_savannah = { prev = { 
											change_pc = pc_savannah
											reroll_deposits = yes 
										} }
										pc_arctic = { prev = { 
											change_pc = pc_arctic
											reroll_deposits = yes 
										} }
										pc_alpine = { prev = { 
											change_pc = pc_alpine
											reroll_deposits = yes 
										} }
										pc_tundra = { prev = { 
											change_pc = pc_tundra
											reroll_deposits = yes 
										} }
								}
							}	
						}
					}
				}
			}
		}
	}
}

event = {
	id = sps_smgg.6
	hide_window = no
	is_triggered_only = yes

	immediate = {
		every_system = {
			random_system_planet = {
				limit = {
					has_planet_flag = central_wormhole_flag
				}
				prev = {
					spawn_megastructure = {
						type = central_wormhole_base
						name = "Strange Anomaly"
					}
				}
			}
		}
	}
}

event = {
	id = sps_smgg.10
	hide_window = yes
	is_triggered_only = yes


	immediate = {
		# Spawn special/hidden countries
		#country_event = {
		#	id = game_start.1 # Spawn special/hidden countries
		#}
		# removes random planet modifiers from homeworlds
		#country_event = {
		#	id = game_start.2
		#}
		every_country = {
			random_system = {
				
			}
			limit = { is_country_type = default }
			# Hidden Game Start Event that resets tutorial for advisor trigger purposes
			country_event = {
				id = game_start.3
			}

			# Add origin hyperlanes and stations in capital system
			country_event = {
				id = game_start.33
			}
			#Tech and resources
			country_event = {
				id = game_start.8
			}
			capital_scope = {
				# Add additional pops on capital
				planet_event = {
					id = game_start.23
				}
				# Pop, buildings and districts
				planet_event = {
					id = game_start.12
				}
				#Shattered Ring blockers
				planet_event = {
					id = game_start.20
				}
			}
		}
		
	}
}


#Fallen Empire Generation

# Fallen Materialist Empire
# Fellorian Technology Empire
event = {
	id = sps_smgg.20
	is_triggered_only = yes
	hide_window = yes

	immediate = {
		random_galaxy_planet = {
			limit = {
				has_planet_flag = sps_fallen_1
			}
			create_species = {
				name = "Fellorian"
				plural = "Fellorians"
				class = AVI
				portrait = avi16
				homeworld = this
				traits = { 
					trait = "trait_intelligent"
					trait = "trait_natural_engineers"
				 }
				can_be_modified = yes

				effect = {
					save_event_target_as = smgg_fellorian_species
				}
			}
			create_species = {
				name = "Zarran"
				plural = "Zarrans"
				class = AVI
				portrait = avi13
				homeworld = this
				traits = { 
					trait = "trait_conformists"
					trait = "trait_conservational"
					trait = "trait_slow_learners"
				 }
				can_be_modified = yes

				effect = {
					save_event_target_as = smgg_zarran_species
				}
			}
			create_country = {
				type = fallen_empire
				name = "Grand Fellorian Nation"
				adjective = "Grand Fellorian Nation"
				name_list = AVI3
				ship_prefix = "GFN"
				authority = auth_democratic
				civics = { 
					civic = civic_technocracy
					civic = civic_crafters
				}
				flag = random #/ { icon = { category = <key> file = <filename.dds> } background = { category = <key> file = <filename.dds> } colors = { <key> <key> } }
				ethos = { 
					ethic = ethic_fanatic_materialist
				}
				species = event_target:smgg_fellorian_species
				effect = {
					set_graphical_culture = fallen_empire_01
					save_event_target_as = smgg_fellorian_empire
				}
			}
			solar_system = {
				create_starbase = {
					owner = event_target:smgg_fellorian_empire
					size = starbase_citadel
					module = anchorage
					module = anchorage
					module = anchorage
					module = anchorage
					module = anchorage
					module = anchorage
					building = crew_quarters
					building = naval_logistics_office
					building = defense_grid
					building = command_center
					effect = {
						while = {
							count = 21
							create_ship = {
								design = "NAME_Cloaker"
							}
						}
					}
				}
				create_cluster = {
					id = fe1_cluster
					radius = 120
					center = this.solar_system
				}
				spawn_megastructure = {
					type = mega_shipyard_3
					graphical_culture = mammalian_01
				}
				spawn_megastructure = {
					type = think_tank_3
					graphical_culture = mammalian_01
				}
				random_system_planet = {
					limit = { has_planet_flag = sps_fallen_1_1 }
					set_owner = event_target:smgg_fellorian_empire
					prevent_anomaly = yes
					set_controller = event_target:smgg_fellorian_empire
					set_planet_flag = fallen_empire_world
					clear_blockers = yes

					add_building = building_ancient_palace
					add_building = building_fe_stronghold
					add_building = building_class_4_singularity
					add_building = building_class_4_singularity
					add_building = building_class_4_singularity
					add_building = building_class_4_singularity
					add_building = building_class_4_singularity
					add_building = building_dimensional_fabricator
					add_building = building_dimensional_fabricator
					add_building = building_nano_forge
					add_building = building_nano_forge
					add_building = building_nano_forge

					while = {
						count = 10
						add_district = district_arcology_housing
					}
					while = {
						count = 4
						add_district = district_arcology_leisure
					}
					while = {
						count = 25
						create_pop = {
							species = owner_main_species
						}
					}
					while = {
						count = 40
						create_pop = {
							species = event_target:smgg_zarran_species
						}
					}
				}
			}
			this = {
				set_owner = event_target:smgg_fellorian_empire
				set_planet_flag = fallen_empire_world
				prevent_anomaly = yes
				set_controller = event_target:smgg_fellorian_empire
				set_capital = yes

				add_building = building_ancient_palace
				add_building = building_fe_stronghold
				add_building = building_fe_stronghold
				add_building = building_affluence_center
				add_building = building_affluence_center
				add_building = building_nourishment_center
				add_building = building_nourishment_center
				add_building = building_nourishment_center
				add_building = building_dimensional_fabricator
				add_building = building_dimensional_fabricator
				add_building = building_dimensional_fabricator
				add_building = building_dimensional_fabricator

				while = {
					count = 10
					add_district = district_arcology_housing
				}
				while = {
					count = 5
					add_district = district_arcology_arms_industry
					add_district = district_arcology_arms_industry
					add_district = district_arcology_civilian_industry
				}
				while = {
					count = 50
					create_pop = {
						species = owner_main_species
					}
				}
				while = {
					count = 130
					create_pop = {
						species = event_target:smgg_zarran_species
					}
				}
				create_fleet = {
					name = "Core Defenders"
					effect = {
						set_owner = event_target:smgg_fellorian_empire
						create_ship = {
							design = "NAME_Savant"
						}
						while = {
							count = 12
							create_ship = {
								design = "NAME_Scholar"
							}
						}
						while = {
							count = 24
							create_ship = {
								design = "NAME_Sage"
							}
						}
						set_location = {
							target = PREV
							distance = 10
							angle = random
						}
					}
				}
				create_fleet = {
					name = "Core Supports"
					effect = {
						set_owner = event_target:smgg_fellorian_empire
						while = {
							count = 8
							create_ship = {
								design = "NAME_Scholar"
							}
						}
						while = {
							count = 16
							create_ship = {
								design = "NAME_Sage"
							}
						}
						set_location = {
							target = PREV
							distance = 10
							angle = random
						}
					}
				}
				create_fleet = {
					name = "Core Supports II"
					effect = {
						set_owner = event_target:smgg_fellorian_empire
						while = {
							count = 8
							create_ship = {
								design = "NAME_Scholar"
							}
						}
						while = {
							count = 16
							create_ship = {
								design = "NAME_Sage"
							}
						}
						set_location = {
							target = PREV
							distance = 10
							angle = random
						}
					}
				}

				while = {
					count = 8
					closest_system = {
						limit = {
							NOT = {
								exists = starbase
							}
							distance = {
								source = event_target:smgg_fellorian_empire
								type = hyperlane
								use_bypasses = no
								bypass_empire = event_target:smgg_fellorian_empire
								min_distance >= 5
								max_distance <= 65
							}
						}
						create_starbase = {
							owner = event_target:smgg_fellorian_empire
							size = starbase_citadel
							module = anchorage
							module = anchorage
							module = anchorage
							module = anchorage
							module = anchorage
							module = anchorage
							building = crew_quarters
							building = naval_logistics_office
							building = communications_jammer
							building = command_center
							effect = {
								while = {
									count = 15
									create_ship = {
										design = "NAME_Cloaker"
									}
								}
							}
						}
					}
				}
				owner = {
					create_ship_design = {
						design = "NAME_Savant"
					}
					create_ship_design = {
						design = "NAME_Scholar"
					}
					create_ship_design = {
						design = "NAME_Sage"
					}
					create_ship_design = {
						design = "NAME_Enforcer"
					}
					create_ship_design = {
						design = "NAME_Cloaker"
					}
					create_ship_design = {
						design = "NAME_Librarian"
					}
					create_ship_design = {
						design = "NAME_Archivist"
					}
				}
				
				owner = {
					country_event = {
						id = sps_smgg.130
					}
					country_event = {
						id = sps_smgg.131
					}
					country_event = {
						id = sps_smgg.134
					}
					country_event = {
						id = sps_smgg.137
					}
					country_event = {
						id = sps_smgg.138
					}
					country_event = {
						id = sps_smgg.140
					}
				}
			}
		}
	}
}

# Fallen Spiritualist Empire
# Saint Live Center
event = {
	id = sps_smgg.30
	is_triggered_only = yes
	hide_window = yes
	immediate = {
		random_galaxy_planet = {
			limit = {
				has_planet_flag = sps_fallen_2_1
			}
			create_species = {
				name = "Traktor"
				plural = "Traktors"
				class = FUN
				portrait = fun7
				homeworld = this
				traits = { 
					trait = "trait_conformists"
					trait = "trait_conservational"
					trait = "trait_slow_learners"
				 }
				can_be_modified = yes

				effect = {
					save_event_target_as = smgg_traktor_species
				}
			}
			create_species = {
				name = "Varrasan"
				plural = "Varrasan"
				class = PLANT
				portrait = pla7
				homeworld = this
				traits = { 
					trait = "trait_industrious"
					trait = "trait_agrarian"
				 }
				can_be_modified = yes

				effect = {
					save_event_target_as = smgg_varrasan_species
				}
			}
			create_country = {
				type = fallen_empire
				name = "Saint Live Center"
				adjective = "Saint Live Center"
				name_list = FUN2
				ship_prefix = "SAINT"
				authority = auth_dictatorial
				civics = { 
					civic = civic_exalted_priesthood
					civic = civic_death_cult
				}
				flag = random #/ { icon = { category = <key> file = <filename.dds> } background = { category = <key> file = <filename.dds> } colors = { <key> <key> } }
				ethos = { 
					ethic = ethic_fanatic_spiritualist
				}
				species = event_target:smgg_traktor_species
				effect = {
					set_graphical_culture = fallen_empire_02
					save_event_target_as = smgg_traktor_empire
				}
			}
			solar_system = {
				create_starbase = {
					owner = event_target:smgg_traktor_empire
					size = starbase_citadel
					module = shipyard
					module = shipyard
					module = shipyard
					module = shipyard
					module = shipyard
					module = shipyard
					building = crew_quarters
					building = titan_yards
					building = fleet_academy
					building = colossus_yards
					effect = {
						while = {
							count = 21
							create_ship = {
								design = "NAME_Faith"
							}
						}
					}
				}
				create_cluster = {
					id = fe2_cluster
					radius = 80
					center = this.solar_system
				}
				spawn_megastructure = {
					type = mega_art_installation_4
					graphical_culture = mammalian_01
				}
				while = {
					count = 2

					random_system_planet = {
						limit = {
							OR = {
								has_planet_flag = sps_fallen_2_2
								has_planet_flag = sps_fallen_2_3
							}
							NOT = {  has_planet_flag = planet_colonized  }
						}
						set_owner = event_target:smgg_traktor_empire
						set_planet_flag = fallen_empire_world
						set_planet_flag = planet_colonized
						prevent_anomaly = yes
						set_controller = event_target:smgg_traktor_empire
	
						add_building = building_ancient_palace
						add_building = building_class_4_singularity
						add_building = building_class_4_singularity
						add_building = building_dimensional_fabricator
						add_building = building_dimensional_fabricator
						add_building = building_nano_forge
						add_building = building_nano_forge
						add_building = building_nano_forge
						add_building = building_fe_stronghold
						add_building = building_fe_dome
	
						while = {
							count = 10
							add_district = district_city
						}
						while = {
							count = 30
							create_pop = {
								species = owner_main_species
							}
						}
						while = {
							count = 10
							create_pop = {
								species = event_target:smgg_varrasan_species
							}
						}
					}
				}
				while = {
					count = 3

					random_system_planet = {
						limit = {
							OR = {
								has_planet_flag = sps_fallen_2_4
								has_planet_flag = sps_fallen_2_5
								has_planet_flag = sps_fallen_2_6
							}
							NOT = {  has_planet_flag = planet_colonized  }
						}
						set_owner = event_target:smgg_traktor_empire
						set_planet_flag = fallen_empire_world
						set_planet_flag = planet_colonized
						prevent_anomaly = yes
						set_controller = event_target:smgg_traktor_empire
	
						add_building = building_fe_dome
						add_building = building_fe_dome

						add_deposit = sps_amenities_20
	
						while = {
							count = 5
							add_district = district_mining
							add_district = district_generator
							add_district = district_farming
						}
						while = {
							count = 1
							create_pop = {
								species = owner_main_species
							}
						}
						while = {
							count = 30
							create_pop = {
								species = event_target:smgg_varrasan_species
							}
						}
					}
				}
			}
			this = {
				set_owner = event_target:smgg_traktor_empire
				set_planet_flag = fallen_empire_world
				prevent_anomaly = yes
				set_controller = event_target:smgg_traktor_empire
				set_capital = yes

				add_building = building_ancient_palace
				add_building = building_fe_stronghold
				add_building = building_fe_stronghold
				add_building = building_nourishment_center
				add_building = building_nourishment_center
				add_building = building_empyrean_shrine
				add_building = building_empyrean_shrine
				add_building = building_empyrean_shrine
				add_building = building_empyrean_shrine
				add_building = building_empyrean_shrine
				add_building = building_empyrean_shrine
				add_building = building_empyrean_shrine
				
				add_deposit = sps_amenities_20
				add_deposit = sps_amenities_20
				add_deposit = sps_amenities_20
				add_deposit = sps_amenities_20
				add_deposit = sps_amenities_20

				while = {
					count = 20
					add_district = district_city
				}
				while = {
					count = 60
					create_pop = {
						species = owner_main_species
					}
				}

				create_fleet = {
					name = "Crusaders I"
					effect = {
						set_owner = event_target:smgg_traktor_empire
						create_ship = {
							design = "NAME_Eternal"
						}
						while = {
							count = 12
							create_ship = {
								design = "NAME_Avatar"
							}
						}
						while = {
							count = 24
							create_ship = {
								design = "NAME_Zealot"
							}
						}
						set_location = {
							target = PREV
							distance = 10
							angle = random
						}
					}
				}
				create_fleet = {
					name = "Crusaders II"
					effect = {
						set_owner = event_target:smgg_traktor_empire
						create_ship = {
							design = "NAME_Eternal"
						}
						while = {
							count = 12
							create_ship = {
								design = "NAME_Avatar"
							}
						}
						while = {
							count = 24
							create_ship = {
								design = "NAME_Zealot"
							}
						}
						set_location = {
							target = PREV
							distance = 10
							angle = random
						}
					}
				}
				create_fleet = {
					name = "Church Forces"
					effect = {
						set_owner = event_target:smgg_traktor_empire
						while = {
							count = 2
							create_ship = {
								design = "NAME_Avatar"
							}
						}
						while = {
							count = 6
							create_ship = {
								design = "NAME_Zealot"
							}
						}
						set_location = {
							target = PREV
							distance = 10
							angle = random
						}
					}
				}

				while = {
					count = 8
					closest_system = {
						limit = {
							NOT = {
								exists = starbase
							}
							distance = {
								source = event_target:smgg_traktor_empire
								type = hyperlane
								use_bypasses = no
								bypass_empire = event_target:smgg_traktor_empire
								min_distance >= 5
								max_distance <= 65
							}
						}
						create_starbase = {
							owner = event_target:smgg_traktor_empire
							size = starbase_citadel
							module = anchorage
							module = anchorage
							module = anchorage
							module = anchorage
							module = anchorage
							module = anchorage
							building = crew_quarters
							building = naval_logistics_office
							building = communications_jammer
							building = command_center
							effect = {
								while = {
									count = 15
									create_ship = {
										design = "NAME_Faith"
									}
								}
							}
						}
					}
				}
				owner = {
					create_ship_design = {
						design = "NAME_Cleanser"
					}
					create_ship_design = {
						design = "NAME_Eternal"
					}
					create_ship_design = {
						design = "NAME_Avatar"
					}
					create_ship_design = {
						design = "NAME_Zealot"
					}
					create_ship_design = {
						design = "NAME_Penitent"
					}
					create_ship_design = {
						design = "NAME_Pilgrim"
					}
					create_ship_design = {
						design = "NAME_Faith"
					}
				}
				
				owner = {
					country_event = {
						id = sps_smgg.131
					}
					country_event = {
						id = sps_smgg.132
					}
					country_event = {
						id = sps_smgg.134
					}
					country_event = {
						id = sps_smgg.135
					}
					country_event = {
						id = sps_smgg.138
					}
					country_event = {
						id = sps_smgg.139
					}
				}
			}
		}
	}
}

# Machine Hive Mind
# 01101010 01101111 01101011 01100101 
event = {
	id = sps_smgg.40
	is_triggered_only = yes
	hide_window = yes

	immediate = {
		random_galaxy_planet = {
			limit = {
				has_planet_flag = sps_fallen_3
			}
			create_species = {
				name = "Protector"
				plural = "Protectors"
				class = MACHINE
				portrait = sd_avi_robot
				homeworld = this
				traits = { 
					trait = "trait_machine_unit"
					trait = "trait_robot_emotion_emulators"
					trait = "trait_robot_domestic_protocols"
				 }
				can_be_modified = yes
				immortal = yes

				effect = {
					set_citizenship_type = {
						type = "citizenship_full_machine"
					}
					save_event_target_as = smgg_protectors_species
				}
			}
			create_country = {
				type = fallen_empire
				name = "01101010 01101111 01101011 01100101"
				adjective = "01101010 01101111 01101011 01100101"
				name_list = MACHINE3
				ship_prefix = "000"
				authority = auth_machine_intelligence
				civics = { 
					civic = civic_machine_ota_updates
				}
				flag = random #/ { icon = { category = <key> file = <filename.dds> } background = { category = <key> file = <filename.dds> } colors = { <key> <key> } }
				ethos = { 
					ethic = ethic_gestalt_consciousness
				}
				species = event_target:smgg_protectors_species
				effect = {
					set_graphical_culture = fallen_empire_03
					save_event_target_as = smgg_00000_empire
				}
			}
			solar_system = {
				create_starbase = {
					owner = event_target:smgg_00000_empire
					size = starbase_citadel
					module = shipyard
					module = shipyard
					module = shipyard
					module = shipyard
					module = shipyard
					module = shipyard
					building = crew_quarters
					building = titan_yards
					building = fleet_academy
					building = colossus_yards
					effect = {
						while = {
							count = 21
							create_ship = {
								design = "NAME_Sigma"
							}
						}
					}
				}
				random_system_planet = {
					limit = {
						has_planet_flag = sps_fallen_3_2
					}
					set_planet_flag = fallen_empire_world
					prevent_anomaly = yes
					set_owner = event_target:smgg_00000_empire
					set_controller = event_target:smgg_00000_empire

					add_building = building_ancient_control_center
					add_building = building_dimensional_fabricator
					add_building = building_dimensional_fabricator
					add_building = building_dimensional_fabricator
					add_building = building_dimensional_fabricator
					add_building = building_dimensional_fabricator
					add_building = building_nano_forge
					add_building = building_nano_forge
					add_building = building_nano_forge
					add_building = building_nano_forge
					add_building = building_nano_forge

					while = {
						count = 5
						add_district = district_rw_nexus
						add_district = district_rw_industrial
					}
					while = {
						count = 50
						create_pop = {
							species = owner_main_species
						}
					}
				}
				random_system_planet = {
					limit = {
						has_planet_flag = sps_fallen_3_3
					}
					set_planet_flag = fallen_empire_world
					prevent_anomaly = yes
					set_owner = event_target:smgg_00000_empire
					set_controller = event_target:smgg_00000_empire

					add_building = building_ancient_control_center
					add_building = building_class_4_singularity
					add_building = building_class_4_singularity
					add_building = building_class_4_singularity
					add_building = building_class_4_singularity

					while = {
						count = 5
						add_district = district_rw_generator
					}
					while = {
						count = 22
						create_pop = {
							species = owner_main_species
						}
					}
				}
			}

			this = {
				set_planet_flag = fallen_empire_world
				prevent_anomaly = yes
				set_owner = root
				set_controller = root
				set_capital = yes

				add_building = building_ancient_control_center
				add_building = building_nourishment_center
				add_building = building_nourishment_center
				add_building = building_ancient_cryo_chamber
				add_building = building_ancient_cryo_chamber
				add_building = building_ancient_cryo_chamber
				add_building = building_ancient_cryo_chamber
				add_building = building_ancient_cryo_chamber
				add_building = building_ancient_cryo_chamber
				add_building = building_ancient_cryo_chamber
				add_building = building_ancient_cryo_chamber
				add_building = building_ancient_cryo_chamber

				while = {
					count = 5
					add_district = district_rw_science
				}
				while = {
					count = 5
					add_district = district_rw_nexus
				}
				while = {
					count = 105
					create_pop = {
						species = owner_main_species
					}
				}

				while = {
					count = 20
					create_army = {
						name = random
						owner = root
						species = root
						type = "machine_assault_2"
					}
				}
				while = {
					count = 8
					closest_system = {
						limit = {
							NOT = {
								exists = starbase
							}
							distance = {
								source = event_target:smgg_00000_empire
								type = hyperlane
								use_bypasses = no
								bypass_empire = event_target:smgg_00000_empire
								min_distance >= 5
								max_distance <= 65
							}
						}
						create_starbase = {
							owner = event_target:smgg_00000_empire
							size = starbase_citadel
							module = anchorage
							module = anchorage
							module = anchorage
							module = anchorage
							module = anchorage
							module = anchorage
							building = crew_quarters
							building = naval_logistics_office
							building = communications_jammer
							building = command_center
							effect = {
								while = {
									count = 15
									create_ship = {
										design = "NAME_Sigma"
									}
								}
							}
						}
					}
				}

				create_fleet = {
					name = "Protectors I"
					effect = {
						set_owner = event_target:smgg_00000_empire
						create_ship = {
							design = "NAME_Alpha"
						}
						while = {
							count = 18
							create_ship = {
								design = "NAME_Beta"
							}
						}
						while = {
							count = 24
							create_ship = {
								design = "NAME_Gamma"
							}
						}
						set_location = {
							target = PREV
							distance = 10
							angle = random
						}
					}
				}
				create_fleet = {
					name = "Protectors II"
					effect = {
						set_owner = event_target:smgg_00000_empire
						create_ship = {
							design = "NAME_Alpha"
						}
						while = {
							count = 18
							create_ship = {
								design = "NAME_Beta"
							}
						}
						while = {
							count = 24
							create_ship = {
								design = "NAME_Gamma"
							}
						}
						set_location = {
							target = PREV
							distance = 10
							angle = random
						}
					}
				}

				owner = {
					create_ship_design = {
						design = "NAME_Omega"
					}
					create_ship_design = {
						design = "NAME_Alpha"
					}
					create_ship_design = {
						design = "NAME_Beta"
					}
					create_ship_design = {
						design = "NAME_Gamma"
					}
					create_ship_design = {
						design = "NAME_Sigma"
					}
					create_ship_design = {
						design = "NAME_Theta"
					}
					create_ship_design = {
						design = "NAME_Tau"
					}
				}
				owner = {
					country_event = {
						id = sps_smgg.130
					}
					country_event = {
						id = sps_smgg.133
					}
					country_event = {
						id = sps_smgg.137
					}
					country_event = {
						id = sps_smgg.138
					}
					country_event = {
						id = sps_smgg.140
					}
				}
			}
		}
	}
}


# Organic Hive Mind
# T'zaki Ancients



# Fallen Xenophile Empire




# Fallen Xenophobe Empire




# Fallen Militarist




# Fallen Pacifists




# Fallen Authoritarian




# Fallen Egalitarian



# Discovery
country_event = {
	id = sps_smgg.130
	is_triggered_only = yes
	hide_window = yes

	immediate = {
		add_tradition = tr_discovery_adopt
		add_tradition = tr_discovery_databank_uplinks
		add_tradition = tr_discovery_faith_in_science
		add_tradition = tr_discovery_polytechnic_education
		add_tradition = tr_discovery_science_division
		add_tradition = tr_discovery_to_boldly_go
		add_tradition = tr_discovery_finish
	}
}

# Adaptability
country_event = {
	id = sps_smgg.131
	is_triggered_only = yes
	hide_window = yes

	immediate = {
		add_tradition = tr_adaptability_adopt
		add_tradition = tr_adaptability_adaptive_ecology
		add_tradition = tr_adaptability_appropriation
		add_tradition = tr_adaptability_dietary_enrichment
		add_tradition = tr_adaptability_environmental_diversification
		add_tradition = tr_adaptability_survival_fittest
		add_tradition = tr_adaptability_finish
	}
}

# Domination
country_event = {
	id = sps_smgg.132
	is_triggered_only = yes
	hide_window = yes

	immediate = {
		add_tradition = tr_domination_adopt
		add_tradition = tr_domination_colonial_viceroys
		add_tradition = tr_domination_grand_council
		add_tradition = tr_domination_imperious_architecture
		add_tradition = tr_domination_judgment_corps
		add_tradition = tr_domination_workplace_motivators
		add_tradition = tr_domination_finish
	}
}

# Diplomacy
country_event = {
	id = sps_smgg.133
	is_triggered_only = yes
	hide_window = yes

	immediate = {
		add_tradition = tr_diplomacy_adopt
		add_tradition = tr_diplomacy_diplomatic_networking
		add_tradition = tr_diplomacy_direct_diplomacy
		add_tradition = tr_diplomacy_eminent_diplomats
		add_tradition = tr_diplomacy_entente_coordination
		add_tradition = tr_diplomacy_the_federation
		add_tradition = tr_diplomacy_finish
	}
}

# Expansion
country_event = {
	id = sps_smgg.134
	is_triggered_only = yes
	hide_window = yes

	immediate = {
		add_tradition = tr_expansion_adopt
		add_tradition = tr_expansion_a_new_life
		add_tradition = tr_expansion_colonization_fever
		add_tradition = tr_expansion_courier_network
		add_tradition = tr_expansion_galactic_ambition
		add_tradition = tr_expansion_reach_for_the_stars
		add_tradition = tr_expansion_finish
	}
}

# Harmony
country_event = {
	id = sps_smgg.135
	is_triggered_only = yes
	hide_window = yes

	immediate = {
		add_tradition = tr_harmony_adopt
		add_tradition = tr_harmony_harmonious_directives
		add_tradition = tr_harmony_kinship
		add_tradition = tr_harmony_mind_and_body
		add_tradition = tr_harmony_the_greater_good
		add_tradition = tr_harmony_utopian_dream
		add_tradition = tr_harmony_finish
	}
}

# Mercantile
country_event = {
	id = sps_smgg.136
	is_triggered_only = yes
	hide_window = yes

	immediate = {
		add_tradition = tr_mercantile_adopt
		add_tradition = tr_mercantile_adaptive_economic_policies
		add_tradition = tr_mercantile_commercial_enterprise
		add_tradition = tr_mercantile_insider_trading
		add_tradition = tr_mercantile_marketplace_of_better_ideas
		add_tradition = tr_mercantile_trickle_up_economics
		add_tradition = tr_mercantile_finish
	}
}

#Prosperity
country_event = {
	id = sps_smgg.137
	is_triggered_only = yes
	hide_window = yes

	immediate = {
		add_tradition = tr_prosperity_adopt
		add_tradition = tr_prosperity_administrative_operations
		add_tradition = tr_prosperity_interstellar_franchising
		add_tradition = tr_prosperity_public_works
		add_tradition = tr_prosperity_pursuit_of_profit
		add_tradition = tr_prosperity_sct
		add_tradition = tr_prosperity_finish
	}
}

# Subterfuge
country_event = {
	id = sps_smgg.138
	is_triggered_only = yes
	hide_window = yes

	immediate = {
		add_tradition = tr_subterfuge_adopt
		add_tradition = tr_subterfuge_double_agents
		add_tradition = tr_subterfuge_information_security
		add_tradition = tr_subterfuge_nda
		add_tradition = tr_subterfuge_operational_security
		add_tradition = tr_subterfuge_shadow_recruits
		add_tradition = tr_subterfuge_finish
	}
}

# Supremacy
country_event = {
	id = sps_smgg.139
	is_triggered_only = yes
	hide_window = yes

	immediate = {
		add_tradition = tr_supremacy_adopt
		add_tradition = tr_supremacy_fleet_logistical_corps
		add_tradition = tr_supremacy_great_game
		add_tradition = tr_supremacy_master_shipwrights
		add_tradition = tr_supremacy_overwhelming_force
		add_tradition = tr_supremacy_war_games
		add_tradition = tr_supremacy_finish
	}
}

# Unyielding
country_event = {
	id = sps_smgg.140
	is_triggered_only = yes
	hide_window = yes

	immediate = {
		add_tradition = tr_unyielding_adopt
		add_tradition = tr_unyielding_bulwark_of_harmony
		add_tradition = tr_unyielding_defensive_zeal
		add_tradition = tr_unyielding_fortress_doctrine
		add_tradition = tr_unyielding_never_surrender
		add_tradition = tr_unyielding_resistance_is_frugal
		add_tradition = tr_unyielding_finish
	}
}